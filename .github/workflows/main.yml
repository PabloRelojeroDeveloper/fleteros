name: Build and Release Fleteros

on:
  push:
    branches:
      - main  # Se activará con cualquier push a la rama main

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necesario para obtener todo el historial de commits para el versionado

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Generate version number
        id: generate_version
        run: |
          # Obtener la versión base desde package.json
          $BASE_VERSION = (Get-Content -Raw -Path package.json | ConvertFrom-Json).version
          
          # Obtener el número de commits en la rama actual para usarlo como número de compilación
          $COMMIT_COUNT = (git rev-list --count HEAD)
          
          # Crear una versión con formato: BASE_VERSION.COMMIT_COUNT
          $VERSION = "$BASE_VERSION.$COMMIT_COUNT"
          
          # Guardar la versión para usarla en los siguientes pasos
          echo "VERSION=$VERSION" >> $env:GITHUB_OUTPUT
          
          # Actualizar la versión en package.json
          $PACKAGE_JSON = Get-Content -Raw -Path package.json | ConvertFrom-Json
          $PACKAGE_JSON.version = $VERSION
          $PACKAGE_JSON | ConvertTo-Json -Depth 100 | Set-Content package.json
        shell: pwsh
      
      - name: Build app for Windows
        run: npm run build
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.generate_version.outputs.VERSION }}
          name: Release v${{ steps.generate_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/*.exe
            dist/latest.yml
